{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asifm\\\\OneDrive\\\\Desktop\\\\vector-project\\\\frontend\\\\src\\\\nodes\\\\MathNode.js\",\n  _s = $RefreshSig$();\n// src/nodes/MarkdownNode.js\nimport React, { useState, useEffect } from \"react\";\nimport BaseNode from \"./BaseNode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MarkdownNode({\n  id,\n  data\n}) {\n  _s();\n  const [inputText, setInputText] = useState((data === null || data === void 0 ? void 0 : data.md) || \"\");\n  const [htmlOutput, setHtmlOutput] = useState(inputText); // simple placeholder for output\n\n  const subtitle = (data === null || data === void 0 ? void 0 : data.subtitle) || \"render\";\n\n  // Update output whenever input changes\n  useEffect(() => {\n    // For now, just pass the text as-is\n    setHtmlOutput(inputText);\n  }, [inputText]);\n  return /*#__PURE__*/_jsxDEV(BaseNode, {\n    id: id,\n    data: {\n      title: \"Markdown\",\n      subtitle,\n      inputs: [{\n        id: `${id}-md`,\n        label: \"Markdown Input\",\n        value: inputText,\n        onChange: val => setInputText(val) // edge-ready input update\n      }],\n\n      outputs: [{\n        id: `${id}-html`,\n        label: \"HTML Output\",\n        value: htmlOutput // can be sent to connected nodes\n      }],\n\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Converts \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Markdown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 22\n        }, this), \" text to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"HTML\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 56\n        }, this), \".\", /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            marginTop: \"8px\",\n            padding: \"4px\",\n            border: \"1px solid #ccc\",\n            whiteSpace: \"pre-wrap\"\n          },\n          children: htmlOutput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(MarkdownNode, \"90fPdpkWCe4D5CSqn/eE5d0ygFs=\");\n_c = MarkdownNode;\nvar _c;\n$RefreshReg$(_c, \"MarkdownNode\");","map":{"version":3,"names":["React","useState","useEffect","BaseNode","jsxDEV","_jsxDEV","MarkdownNode","id","data","_s","inputText","setInputText","md","htmlOutput","setHtmlOutput","subtitle","title","inputs","label","value","onChange","val","outputs","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","padding","border","whiteSpace","_c","$RefreshReg$"],"sources":["C:/Users/asifm/OneDrive/Desktop/vector-project/frontend/src/nodes/MathNode.js"],"sourcesContent":["// src/nodes/MarkdownNode.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport BaseNode from \"./BaseNode\";\r\n\r\nexport default function MarkdownNode({ id, data }) {\r\n  const [inputText, setInputText] = useState(data?.md || \"\");\r\n  const [htmlOutput, setHtmlOutput] = useState(inputText); // simple placeholder for output\r\n\r\n  const subtitle = data?.subtitle || \"render\";\r\n\r\n  // Update output whenever input changes\r\n  useEffect(() => {\r\n    // For now, just pass the text as-is\r\n    setHtmlOutput(inputText);\r\n  }, [inputText]);\r\n\r\n  return (\r\n    <BaseNode\r\n      id={id}\r\n      data={{\r\n        title: \"Markdown\",\r\n        subtitle,\r\n        inputs: [\r\n          {\r\n            id: `${id}-md`,\r\n            label: \"Markdown Input\",\r\n            value: inputText,\r\n            onChange: (val) => setInputText(val), // edge-ready input update\r\n          },\r\n        ],\r\n        outputs: [\r\n          {\r\n            id: `${id}-html`,\r\n            label: \"HTML Output\",\r\n            value: htmlOutput, // can be sent to connected nodes\r\n          },\r\n        ],\r\n        children: (\r\n          <div>\r\n            Converts <strong>Markdown</strong> text to <strong>HTML</strong>.\r\n            <pre\r\n              style={{\r\n                marginTop: \"8px\",\r\n                padding: \"4px\",\r\n                border: \"1px solid #ccc\",\r\n                whiteSpace: \"pre-wrap\",\r\n              }}\r\n            >\r\n              {htmlOutput}\r\n            </pre>\r\n          </div>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,YAAYA,CAAC;EAAEC,EAAE;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAAO,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,EAAE,KAAI,EAAE,CAAC;EAC1D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAACS,SAAS,CAAC,CAAC,CAAC;;EAEzD,MAAMK,QAAQ,GAAG,CAAAP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,QAAQ,KAAI,QAAQ;;EAE3C;EACAb,SAAS,CAAC,MAAM;IACd;IACAY,aAAa,CAACJ,SAAS,CAAC;EAC1B,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,oBACEL,OAAA,CAACF,QAAQ;IACPI,EAAE,EAAEA,EAAG;IACPC,IAAI,EAAE;MACJQ,KAAK,EAAE,UAAU;MACjBD,QAAQ;MACRE,MAAM,EAAE,CACN;QACEV,EAAE,EAAG,GAAEA,EAAG,KAAI;QACdW,KAAK,EAAE,gBAAgB;QACvBC,KAAK,EAAET,SAAS;QAChBU,QAAQ,EAAGC,GAAG,IAAKV,YAAY,CAACU,GAAG,CAAC,CAAE;MACxC,CAAC,CACF;;MACDC,OAAO,EAAE,CACP;QACEf,EAAE,EAAG,GAAEA,EAAG,OAAM;QAChBW,KAAK,EAAE,aAAa;QACpBC,KAAK,EAAEN,UAAU,CAAE;MACrB,CAAC,CACF;;MACDU,QAAQ,eACNlB,OAAA;QAAAkB,QAAA,GAAK,WACM,eAAAlB,OAAA;UAAAkB,QAAA,EAAQ;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,aAAS,eAAAtB,OAAA;UAAAkB,QAAA,EAAQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAChE,eAAAtB,OAAA;UACEuB,KAAK,EAAE;YACLC,SAAS,EAAE,KAAK;YAChBC,OAAO,EAAE,KAAK;YACdC,MAAM,EAAE,gBAAgB;YACxBC,UAAU,EAAE;UACd,CAAE;UAAAT,QAAA,EAEDV;QAAU;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAET;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN;AAAClB,EAAA,CAnDuBH,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}