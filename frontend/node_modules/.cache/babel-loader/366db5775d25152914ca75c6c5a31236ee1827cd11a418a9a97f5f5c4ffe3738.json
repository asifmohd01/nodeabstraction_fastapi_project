{"ast":null,"code":"import { create } from \"zustand\";\nimport { addEdge, applyNodeChanges, applyEdgeChanges, MarkerType } from \"reactflow\";\nexport const useStore = create((set, get) => ({\n  nodes: [],\n  edges: [],\n  nodeIDs: {},\n  // ensure nodeIDs is initialized\n  getNodeID: type => {\n    const newIDs = {\n      ...get().nodeIDs\n    };\n    if (!newIDs[type]) newIDs[type] = 0;\n    newIDs[type] += 1;\n    set({\n      nodeIDs: newIDs\n    });\n    return `${type}-${newIDs[type]}`;\n  },\n  addNode: node => {\n    set({\n      nodes: [...get().nodes, node]\n    });\n  },\n  onNodesChange: changes => {\n    set({\n      nodes: applyNodeChanges(changes, get().nodes)\n    });\n  },\n  onEdgesChange: changes => {\n    set({\n      edges: applyEdgeChanges(changes, get().edges)\n    });\n  },\n  onConnect: connection => {\n    const edge = {\n      ...connection,\n      type: \"smoothstep\",\n      animated: true,\n      markerEnd: {\n        type: MarkerType.Arrow,\n        height: 20,\n        width: 20\n      }\n    };\n    set({\n      edges: addEdge(edge, get().edges)\n    });\n  },\n  updateNodeField: (nodeId, fieldName, fieldValue) => {\n    set({\n      nodes: get().nodes.map(node => node.id === nodeId ? {\n        ...node,\n        data: {\n          ...node.data,\n          [fieldName]: fieldValue\n        }\n      } : node)\n    });\n  }\n}));","map":{"version":3,"names":["create","addEdge","applyNodeChanges","applyEdgeChanges","MarkerType","useStore","set","get","nodes","edges","nodeIDs","getNodeID","type","newIDs","addNode","node","onNodesChange","changes","onEdgesChange","onConnect","connection","edge","animated","markerEnd","Arrow","height","width","updateNodeField","nodeId","fieldName","fieldValue","map","id","data"],"sources":["C:/Users/asifm/OneDrive/Desktop/React/vector-project/frontend/src/store.js"],"sourcesContent":["import { create } from \"zustand\";\nimport {\n  addEdge,\n  applyNodeChanges,\n  applyEdgeChanges,\n  MarkerType,\n} from \"reactflow\";\n\nexport const useStore = create((set, get) => ({\n  nodes: [],\n  edges: [],\n  nodeIDs: {}, // ensure nodeIDs is initialized\n  getNodeID: (type) => {\n    const newIDs = { ...get().nodeIDs };\n    if (!newIDs[type]) newIDs[type] = 0;\n    newIDs[type] += 1;\n    set({ nodeIDs: newIDs });\n    return `${type}-${newIDs[type]}`;\n  },\n  addNode: (node) => {\n    set({ nodes: [...get().nodes, node] });\n  },\n  onNodesChange: (changes) => {\n    set({ nodes: applyNodeChanges(changes, get().nodes) });\n  },\n  onEdgesChange: (changes) => {\n    set({ edges: applyEdgeChanges(changes, get().edges) });\n  },\n  onConnect: (connection) => {\n    const edge = {\n      ...connection,\n      type: \"smoothstep\",\n      animated: true,\n      markerEnd: { type: MarkerType.Arrow, height: 20, width: 20 },\n    };\n    set({ edges: addEdge(edge, get().edges) });\n  },\n  updateNodeField: (nodeId, fieldName, fieldValue) => {\n    set({\n      nodes: get().nodes.map((node) =>\n        node.id === nodeId\n          ? { ...node, data: { ...node.data, [fieldName]: fieldValue } }\n          : node\n      ),\n    });\n  },\n}));\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,SACEC,OAAO,EACPC,gBAAgB,EAChBC,gBAAgB,EAChBC,UAAU,QACL,WAAW;AAElB,OAAO,MAAMC,QAAQ,GAAGL,MAAM,CAAC,CAACM,GAAG,EAAEC,GAAG,MAAM;EAC5CC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,CAAC,CAAC;EAAE;EACbC,SAAS,EAAGC,IAAI,IAAK;IACnB,MAAMC,MAAM,GAAG;MAAE,GAAGN,GAAG,CAAC,CAAC,CAACG;IAAQ,CAAC;IACnC,IAAI,CAACG,MAAM,CAACD,IAAI,CAAC,EAAEC,MAAM,CAACD,IAAI,CAAC,GAAG,CAAC;IACnCC,MAAM,CAACD,IAAI,CAAC,IAAI,CAAC;IACjBN,GAAG,CAAC;MAAEI,OAAO,EAAEG;IAAO,CAAC,CAAC;IACxB,OAAQ,GAAED,IAAK,IAAGC,MAAM,CAACD,IAAI,CAAE,EAAC;EAClC,CAAC;EACDE,OAAO,EAAGC,IAAI,IAAK;IACjBT,GAAG,CAAC;MAAEE,KAAK,EAAE,CAAC,GAAGD,GAAG,CAAC,CAAC,CAACC,KAAK,EAAEO,IAAI;IAAE,CAAC,CAAC;EACxC,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BX,GAAG,CAAC;MAAEE,KAAK,EAAEN,gBAAgB,CAACe,OAAO,EAAEV,GAAG,CAAC,CAAC,CAACC,KAAK;IAAE,CAAC,CAAC;EACxD,CAAC;EACDU,aAAa,EAAGD,OAAO,IAAK;IAC1BX,GAAG,CAAC;MAAEG,KAAK,EAAEN,gBAAgB,CAACc,OAAO,EAAEV,GAAG,CAAC,CAAC,CAACE,KAAK;IAAE,CAAC,CAAC;EACxD,CAAC;EACDU,SAAS,EAAGC,UAAU,IAAK;IACzB,MAAMC,IAAI,GAAG;MACX,GAAGD,UAAU;MACbR,IAAI,EAAE,YAAY;MAClBU,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE;QAAEX,IAAI,EAAER,UAAU,CAACoB,KAAK;QAAEC,MAAM,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAG;IAC7D,CAAC;IACDpB,GAAG,CAAC;MAAEG,KAAK,EAAER,OAAO,CAACoB,IAAI,EAAEd,GAAG,CAAC,CAAC,CAACE,KAAK;IAAE,CAAC,CAAC;EAC5C,CAAC;EACDkB,eAAe,EAAEA,CAACC,MAAM,EAAEC,SAAS,EAAEC,UAAU,KAAK;IAClDxB,GAAG,CAAC;MACFE,KAAK,EAAED,GAAG,CAAC,CAAC,CAACC,KAAK,CAACuB,GAAG,CAAEhB,IAAI,IAC1BA,IAAI,CAACiB,EAAE,KAAKJ,MAAM,GACd;QAAE,GAAGb,IAAI;QAAEkB,IAAI,EAAE;UAAE,GAAGlB,IAAI,CAACkB,IAAI;UAAE,CAACJ,SAAS,GAAGC;QAAW;MAAE,CAAC,GAC5Df,IACN;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}