{"ast":null,"code":"// store.js\n\nimport { create } from \"zustand\";\nimport { addEdge, applyNodeChanges, applyEdgeChanges, MarkerType } from \"reactflow\";\nexport const useStore = create((set, get) => ({\n  nodes: [],\n  edges: [],\n  getNodeID: type => {\n    const newIDs = {\n      ...get().nodeIDs\n    };\n    if (newIDs[type] === undefined) {\n      newIDs[type] = 0;\n    }\n    newIDs[type] += 1;\n    set({\n      nodeIDs: newIDs\n    });\n    return `${type}-${newIDs[type]}`;\n  },\n  addNode: node => {\n    set({\n      nodes: [...get().nodes, node]\n    });\n  },\n  onNodesChange: changes => {\n    set({\n      nodes: applyNodeChanges(changes, get().nodes)\n    });\n  },\n  onEdgesChange: changes => {\n    set({\n      edges: applyEdgeChanges(changes, get().edges)\n    });\n  },\n  onConnect: connection => {\n    set({\n      edges: addEdge({\n        ...connection,\n        type: \"smoothstep\",\n        animated: true,\n        markerEnd: {\n          type: MarkerType.Arrow,\n          height: \"20px\",\n          width: \"20px\"\n        }\n      }, get().edges)\n    });\n  },\n  updateNodeField: (nodeId, fieldName, fieldValue) => {\n    set({\n      nodes: get().nodes.map(node => {\n        if (node.id === nodeId) {\n          node.data = {\n            ...node.data,\n            [fieldName]: fieldValue\n          };\n        }\n        return node;\n      })\n    });\n  }\n}));","map":{"version":3,"names":["create","addEdge","applyNodeChanges","applyEdgeChanges","MarkerType","useStore","set","get","nodes","edges","getNodeID","type","newIDs","nodeIDs","undefined","addNode","node","onNodesChange","changes","onEdgesChange","onConnect","connection","animated","markerEnd","Arrow","height","width","updateNodeField","nodeId","fieldName","fieldValue","map","id","data"],"sources":["C:/Users/asifm/OneDrive/Desktop/React/vector-project/frontend/src/store.js"],"sourcesContent":["// store.js\n\nimport { create } from \"zustand\";\nimport {\n  addEdge,\n  applyNodeChanges,\n  applyEdgeChanges,\n  MarkerType,\n} from \"reactflow\";\n\nexport const useStore = create((set, get) => ({\n  nodes: [],\n  edges: [],\n  getNodeID: (type) => {\n    const newIDs = { ...get().nodeIDs };\n    if (newIDs[type] === undefined) {\n      newIDs[type] = 0;\n    }\n    newIDs[type] += 1;\n    set({ nodeIDs: newIDs });\n    return `${type}-${newIDs[type]}`;\n  },\n  addNode: (node) => {\n    set({\n      nodes: [...get().nodes, node],\n    });\n  },\n  onNodesChange: (changes) => {\n    set({\n      nodes: applyNodeChanges(changes, get().nodes),\n    });\n  },\n  onEdgesChange: (changes) => {\n    set({\n      edges: applyEdgeChanges(changes, get().edges),\n    });\n  },\n  onConnect: (connection) => {\n    set({\n      edges: addEdge(\n        {\n          ...connection,\n          type: \"smoothstep\",\n          animated: true,\n          markerEnd: { type: MarkerType.Arrow, height: \"20px\", width: \"20px\" },\n        },\n        get().edges\n      ),\n    });\n  },\n  updateNodeField: (nodeId, fieldName, fieldValue) => {\n    set({\n      nodes: get().nodes.map((node) => {\n        if (node.id === nodeId) {\n          node.data = { ...node.data, [fieldName]: fieldValue };\n        }\n\n        return node;\n      }),\n    });\n  },\n}));\n"],"mappings":"AAAA;;AAEA,SAASA,MAAM,QAAQ,SAAS;AAChC,SACEC,OAAO,EACPC,gBAAgB,EAChBC,gBAAgB,EAChBC,UAAU,QACL,WAAW;AAElB,OAAO,MAAMC,QAAQ,GAAGL,MAAM,CAAC,CAACM,GAAG,EAAEC,GAAG,MAAM;EAC5CC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAGC,IAAI,IAAK;IACnB,MAAMC,MAAM,GAAG;MAAE,GAAGL,GAAG,CAAC,CAAC,CAACM;IAAQ,CAAC;IACnC,IAAID,MAAM,CAACD,IAAI,CAAC,KAAKG,SAAS,EAAE;MAC9BF,MAAM,CAACD,IAAI,CAAC,GAAG,CAAC;IAClB;IACAC,MAAM,CAACD,IAAI,CAAC,IAAI,CAAC;IACjBL,GAAG,CAAC;MAAEO,OAAO,EAAED;IAAO,CAAC,CAAC;IACxB,OAAQ,GAAED,IAAK,IAAGC,MAAM,CAACD,IAAI,CAAE,EAAC;EAClC,CAAC;EACDI,OAAO,EAAGC,IAAI,IAAK;IACjBV,GAAG,CAAC;MACFE,KAAK,EAAE,CAAC,GAAGD,GAAG,CAAC,CAAC,CAACC,KAAK,EAAEQ,IAAI;IAC9B,CAAC,CAAC;EACJ,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BZ,GAAG,CAAC;MACFE,KAAK,EAAEN,gBAAgB,CAACgB,OAAO,EAAEX,GAAG,CAAC,CAAC,CAACC,KAAK;IAC9C,CAAC,CAAC;EACJ,CAAC;EACDW,aAAa,EAAGD,OAAO,IAAK;IAC1BZ,GAAG,CAAC;MACFG,KAAK,EAAEN,gBAAgB,CAACe,OAAO,EAAEX,GAAG,CAAC,CAAC,CAACE,KAAK;IAC9C,CAAC,CAAC;EACJ,CAAC;EACDW,SAAS,EAAGC,UAAU,IAAK;IACzBf,GAAG,CAAC;MACFG,KAAK,EAAER,OAAO,CACZ;QACE,GAAGoB,UAAU;QACbV,IAAI,EAAE,YAAY;QAClBW,QAAQ,EAAE,IAAI;QACdC,SAAS,EAAE;UAAEZ,IAAI,EAAEP,UAAU,CAACoB,KAAK;UAAEC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAO;MACrE,CAAC,EACDnB,GAAG,CAAC,CAAC,CAACE,KACR;IACF,CAAC,CAAC;EACJ,CAAC;EACDkB,eAAe,EAAEA,CAACC,MAAM,EAAEC,SAAS,EAAEC,UAAU,KAAK;IAClDxB,GAAG,CAAC;MACFE,KAAK,EAAED,GAAG,CAAC,CAAC,CAACC,KAAK,CAACuB,GAAG,CAAEf,IAAI,IAAK;QAC/B,IAAIA,IAAI,CAACgB,EAAE,KAAKJ,MAAM,EAAE;UACtBZ,IAAI,CAACiB,IAAI,GAAG;YAAE,GAAGjB,IAAI,CAACiB,IAAI;YAAE,CAACJ,SAAS,GAAGC;UAAW,CAAC;QACvD;QAEA,OAAOd,IAAI;MACb,CAAC;IACH,CAAC,CAAC;EACJ;AACF,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}