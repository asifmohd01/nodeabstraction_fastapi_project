{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asifm\\\\OneDrive\\\\Desktop\\\\React\\\\vector-project\\\\frontend\\\\src\\\\submit.js\",\n  _s = $RefreshSig$();\n// src/submit.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SubmitButton = ({\n  nodes = [],\n  edges = []\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const onSubmit = async () => {\n    setLoading(true);\n    try {\n      const resp = await fetch(\"http://localhost:8000/pipelines/parse\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          nodes,\n          edges\n        })\n      });\n      if (!resp.ok) {\n        // if backend sends error (like 422, 500 etc.)\n        const errorText = await resp.text();\n        throw new Error(`Server error: ${resp.status} - ${errorText}`);\n      }\n      const data = await resp.json();\n      alert(`Pipeline Report\\n\\nNodes: ${data.num_nodes}\\nEdges: ${data.num_edges}\\nDAG: ${data.is_dag ? \"Yes\" : \"No\"}`);\n    } catch (e) {\n      console.error(\"Submit Error:\", e);\n      alert(\"Failed to submit: \" + e.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"button\",\n    onClick: onSubmit,\n    disabled: loading,\n    style: {\n      padding: \"10px 16px\",\n      borderRadius: \"8px\",\n      backgroundColor: loading ? \"#999\" : \"#007bff\",\n      color: \"#fff\",\n      border: \"none\",\n      cursor: loading ? \"not-allowed\" : \"pointer\"\n    },\n    children: loading ? \"Submitting...\" : \"Submit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(SubmitButton, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c = SubmitButton;\nvar _c;\n$RefreshReg$(_c, \"SubmitButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SubmitButton","nodes","edges","_s","loading","setLoading","onSubmit","resp","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","status","data","json","alert","num_nodes","num_edges","is_dag","e","console","error","message","className","onClick","disabled","style","padding","borderRadius","backgroundColor","color","border","cursor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/asifm/OneDrive/Desktop/React/vector-project/frontend/src/submit.js"],"sourcesContent":["// src/submit.js\nimport React, { useState } from \"react\";\n\nexport const SubmitButton = ({ nodes = [], edges = [] }) => {\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = async () => {\n    setLoading(true);\n    try {\n      const resp = await fetch(\"http://localhost:8000/pipelines/parse\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ nodes, edges }),\n      });\n\n      if (!resp.ok) {\n        // if backend sends error (like 422, 500 etc.)\n        const errorText = await resp.text();\n        throw new Error(`Server error: ${resp.status} - ${errorText}`);\n      }\n\n      const data = await resp.json();\n\n      alert(\n        `Pipeline Report\\n\\nNodes: ${data.num_nodes}\\nEdges: ${\n          data.num_edges\n        }\\nDAG: ${data.is_dag ? \"Yes\" : \"No\"}`\n      );\n    } catch (e) {\n      console.error(\"Submit Error:\", e);\n      alert(\"Failed to submit: \" + e.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <button\n      className=\"button\"\n      onClick={onSubmit}\n      disabled={loading}\n      style={{\n        padding: \"10px 16px\",\n        borderRadius: \"8px\",\n        backgroundColor: loading ? \"#999\" : \"#007bff\",\n        color: \"#fff\",\n        border: \"none\",\n        cursor: loading ? \"not-allowed\" : \"pointer\",\n      }}\n    >\n      {loading ? \"Submitting...\" : \"Submit\"}\n    </button>\n  );\n};\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK,GAAG,EAAE;EAAEC,KAAK,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMS,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3BD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,IAAI,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEZ,KAAK;UAAEC;QAAM,CAAC;MACvC,CAAC,CAAC;MAEF,IAAI,CAACK,IAAI,CAACO,EAAE,EAAE;QACZ;QACA,MAAMC,SAAS,GAAG,MAAMR,IAAI,CAACS,IAAI,CAAC,CAAC;QACnC,MAAM,IAAIC,KAAK,CAAE,iBAAgBV,IAAI,CAACW,MAAO,MAAKH,SAAU,EAAC,CAAC;MAChE;MAEA,MAAMI,IAAI,GAAG,MAAMZ,IAAI,CAACa,IAAI,CAAC,CAAC;MAE9BC,KAAK,CACF,6BAA4BF,IAAI,CAACG,SAAU,YAC1CH,IAAI,CAACI,SACN,UAASJ,IAAI,CAACK,MAAM,GAAG,KAAK,GAAG,IAAK,EACvC,CAAC;IACH,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,CAAC,CAAC;MACjCJ,KAAK,CAAC,oBAAoB,GAAGI,CAAC,CAACG,OAAO,CAAC;IACzC,CAAC,SAAS;MACRvB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IACE8B,SAAS,EAAC,QAAQ;IAClBC,OAAO,EAAExB,QAAS;IAClByB,QAAQ,EAAE3B,OAAQ;IAClB4B,KAAK,EAAE;MACLC,OAAO,EAAE,WAAW;MACpBC,YAAY,EAAE,KAAK;MACnBC,eAAe,EAAE/B,OAAO,GAAG,MAAM,GAAG,SAAS;MAC7CgC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdC,MAAM,EAAElC,OAAO,GAAG,aAAa,GAAG;IACpC,CAAE;IAAAmC,QAAA,EAEDnC,OAAO,GAAG,eAAe,GAAG;EAAQ;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEb,CAAC;AAACxC,EAAA,CAlDWH,YAAY;AAAA4C,EAAA,GAAZ5C,YAAY;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}