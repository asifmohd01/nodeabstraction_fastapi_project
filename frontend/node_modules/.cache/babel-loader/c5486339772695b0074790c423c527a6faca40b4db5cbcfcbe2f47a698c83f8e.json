{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asifm\\\\OneDrive\\\\Desktop\\\\vector-project\\\\frontend\\\\src\\\\nodes\\\\MarkdownNode.js\",\n  _s = $RefreshSig$();\n// src/nodes/MarkdownNode.js\nimport React, { useState, useEffect } from \"react\";\nimport BaseNode from \"./BaseNode\";\nimport { marked } from \"marked\"; // optional: convert markdown to HTML dynamically\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MarkdownNode({\n  id,\n  data\n}) {\n  _s();\n  const [html, setHtml] = useState(\"\");\n  const inputText = (data === null || data === void 0 ? void 0 : data.md) || \"\";\n  const subtitle = (data === null || data === void 0 ? void 0 : data.subtitle) || \"render\";\n\n  // Convert Markdown to HTML whenever input changes\n  useEffect(() => {\n    setHtml(marked(inputText));\n  }, [inputText]);\n  return /*#__PURE__*/_jsxDEV(BaseNode, {\n    id: id,\n    data: {\n      title: \"Markdown\",\n      subtitle,\n      inputs: [{\n        id: `${id}-md`,\n        label: \"Markdown Input\",\n        value: inputText\n      }],\n      outputs: [{\n        id: `${id}-html`,\n        label: \"HTML Output\",\n        value: html\n      }],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Converts \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Markdown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 22\n        }, this), \" text to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"HTML\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 56\n        }, this), \".\", /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"8px\",\n            padding: \"4px\",\n            border: \"1px solid #ccc\"\n          },\n          dangerouslySetInnerHTML: {\n            __html: html\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(MarkdownNode, \"TgMqydxNsibpjO+BTohp/Jjrufo=\");\n_c = MarkdownNode;\nvar _c;\n$RefreshReg$(_c, \"MarkdownNode\");","map":{"version":3,"names":["React","useState","useEffect","BaseNode","marked","jsxDEV","_jsxDEV","MarkdownNode","id","data","_s","html","setHtml","inputText","md","subtitle","title","inputs","label","value","outputs","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","padding","border","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/asifm/OneDrive/Desktop/vector-project/frontend/src/nodes/MarkdownNode.js"],"sourcesContent":["// src/nodes/MarkdownNode.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport BaseNode from \"./BaseNode\";\r\nimport { marked } from \"marked\"; // optional: convert markdown to HTML dynamically\r\n\r\nexport default function MarkdownNode({ id, data }) {\r\n  const [html, setHtml] = useState(\"\");\r\n  const inputText = data?.md || \"\";\r\n  const subtitle = data?.subtitle || \"render\";\r\n\r\n  // Convert Markdown to HTML whenever input changes\r\n  useEffect(() => {\r\n    setHtml(marked(inputText));\r\n  }, [inputText]);\r\n\r\n  return (\r\n    <BaseNode\r\n      id={id}\r\n      data={{\r\n        title: \"Markdown\",\r\n        subtitle,\r\n        inputs: [\r\n          { id: `${id}-md`, label: \"Markdown Input\", value: inputText },\r\n        ],\r\n        outputs: [\r\n          { id: `${id}-html`, label: \"HTML Output\", value: html },\r\n        ],\r\n        children: (\r\n          <div>\r\n            Converts <strong>Markdown</strong> text to <strong>HTML</strong>.\r\n            <div\r\n              style={{ marginTop: \"8px\", padding: \"4px\", border: \"1px solid #ccc\" }}\r\n              dangerouslySetInnerHTML={{ __html: html }}\r\n            />\r\n          </div>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,MAAM,QAAQ,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,YAAYA,CAAC;EAAEC,EAAE;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMY,SAAS,GAAG,CAAAJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK,EAAE,KAAI,EAAE;EAChC,MAAMC,QAAQ,GAAG,CAAAN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,QAAQ,KAAI,QAAQ;;EAE3C;EACAb,SAAS,CAAC,MAAM;IACdU,OAAO,CAACR,MAAM,CAACS,SAAS,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,oBACEP,OAAA,CAACH,QAAQ;IACPK,EAAE,EAAEA,EAAG;IACPC,IAAI,EAAE;MACJO,KAAK,EAAE,UAAU;MACjBD,QAAQ;MACRE,MAAM,EAAE,CACN;QAAET,EAAE,EAAG,GAAEA,EAAG,KAAI;QAAEU,KAAK,EAAE,gBAAgB;QAAEC,KAAK,EAAEN;MAAU,CAAC,CAC9D;MACDO,OAAO,EAAE,CACP;QAAEZ,EAAE,EAAG,GAAEA,EAAG,OAAM;QAAEU,KAAK,EAAE,aAAa;QAAEC,KAAK,EAAER;MAAK,CAAC,CACxD;MACDU,QAAQ,eACNf,OAAA;QAAAe,QAAA,GAAK,WACM,eAAAf,OAAA;UAAAe,QAAA,EAAQ;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,aAAS,eAAAnB,OAAA;UAAAe,QAAA,EAAQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAChE,eAAAnB,OAAA;UACEoB,KAAK,EAAE;YAAEC,SAAS,EAAE,KAAK;YAAEC,OAAO,EAAE,KAAK;YAAEC,MAAM,EAAE;UAAiB,CAAE;UACtEC,uBAAuB,EAAE;YAAEC,MAAM,EAAEpB;UAAK;QAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAET;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN;AAACf,EAAA,CAlCuBH,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}